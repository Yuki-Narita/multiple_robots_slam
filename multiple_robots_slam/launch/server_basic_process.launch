<launch>
    <arg name="server_name" default="server"/>

    <!-- merge_map -->
    <!-- ロボットを追加するときは初期設定、パラメータ、tfをコピペ -->
    <!-- 各ロボットの初期設定 -->
    <arg name="robot1_name" default="robot1"/>
    <arg name="robot1_map_frame" default="/$(arg robot1_name)/map"/>
    <arg name="robot1_init_pose_x" default="0.0"/>
    <arg name="robot1_init_pose_y" default="0.0"/>
    <arg name="robot1_init_pose_yaw" default="0.0"/> <!-- yawの設定値は -1.57 <= yaw <= 1.57 -->
    
    <arg name="robot2_name" default="robot2"/>
    <arg name="robot2_map_frame" default="/$(arg robot2_name)/map"/>
    <arg name="robot2_init_pose_x" default="39.3"/>
    <arg name="robot2_init_pose_y" default="12.0"/>
    <arg name="robot2_init_pose_yaw" default="3.14"/>

    <!-- ノードに渡すパラメータ用 -->
    <group ns="/$(arg robot1_name)/map_merge">
        <param name="init_pose_x" value="$(arg robot1_init_pose_x)"/>
        <param name="init_pose_y" value="$(arg robot1_init_pose_y)"/>
        <param name="init_pose_z" value="0.0"/>
        <param name="init_pose_yaw" value="$(arg robot1_init_pose_yaw)"/>
    </group>

    <group ns="/$(arg robot2_name)/map_merge">
        <param name="init_pose_x" value="$(arg robot2_init_pose_x)"/>
        <param name="init_pose_y" value="$(arg robot2_init_pose_y)"/>
        <param name="init_pose_z" value="0.0"/>
        <param name="init_pose_yaw" value="$(arg robot2_init_pose_yaw)"/>
    </group>

    <arg name="merge_map_frame" default="/$(arg server_name)/merge_map"/>
    <arg name="grid_map_topic" default="merge_map/grid"/>
    <arg name="cloud_map_topic" default="merge_map/cloud"/>

    <!-- map_fill -->
    <arg name="map_fill" default="true"/>
    <arg name="fill_map" default="fill_map"/>
    <arg name="fill_costmap" default="fill_costmap"/>
    <arg name="orig_costmap" default="/$(arg robot1_name)/move_base/global_costmap/costmap"/>

    <arg name="use_costmap" default="false"/>
    

    <group ns="$(arg server_name)">
        <!-- map_merge -->
        <include file="$(find map_merge)/launch/includes/map_merge.launch.xml">
            <arg name="merge_map_frame" value="$(arg merge_map_frame)"/>
            <arg name="robot1_map_frame" value="$(arg robot1_map_frame)"/>
            <arg name="robot1_init_pose_x" value="$(arg robot1_init_pose_x)"/>
            <arg name="robot1_init_pose_y" value="$(arg robot1_init_pose_y)"/>
            <arg name="robot1_init_pose_yaw" value="$(arg robot1_init_pose_yaw)"/>
            <arg name="robot2_map_frame" value="$(arg robot2_map_frame)"/>
            <arg name="robot2_init_pose_x" value="$(arg robot2_init_pose_x)"/>
            <arg name="robot2_init_pose_y" value="$(arg robot2_init_pose_y)"/>
            <arg name="robot2_init_pose_yaw" value="$(arg robot2_init_pose_yaw)"/>
            <arg name="grid_map_topic" value="$(arg grid_map_topic)"/>
            <arg name="cloud_map_topic" value="$(arg cloud_map_topic)"/>
        </include>

        <!-- map_fill -->
        <!-- <node if="$(arg map_fill)" pkg="exploration_support" type="map_fill" name="map_fill">
            <remap from="map" to="$(arg grid_map_topic)"/>
            <remap from="fill_map" to="$(arg fill_map)"/>
        </node> -->

        <!-- map_fill -->
        <node if="$(eval arg('map_fill') and not arg('use_costmap'))" pkg="exploration_support" type="map_fill" name="map_fill">
            <remap from="map" to="$(arg grid_map_topic)"/>
            <remap from="fill_map" to="$(arg fill_map)"/>
            <param name="map_fill/fill_parameter_file_path" value="$(find exploration_support)/param/fill_last_parameters.yaml"/>
            <rosparam file="$(find exploration_support)/param/fill_last_parameters.yaml" command="load" ns="map_fill"/>
        </node>

        <!-- costmap_fill -->
        <node if="$(eval arg('map_fill') and arg('use_costmap'))" pkg="exploration_support" type="map_fill" name="costmap_fill">
            <remap from="map" to="$(arg orig_costmap)"/>
            <remap from="fill_map" to="$(arg fill_costmap)"/>
            <param name="map_fill/fill_parameter_file_path" value="$(find exploration_support)/param/fill_last_parameters.yaml"/>
            <rosparam file="$(find exploration_support)/param/fill_last_parameters.yaml" command="load" ns="map_fill"/>
        </node>

        <!-- exploration_manager -->
        <node pkg="exploration_support" type="exploration_manager" name="exploration_manager">
            <remap if="$(arg map_fill)" from="map" to="$(arg fill_map)"/>
            <remap unless="$(arg map_fill)" from="map" to="$(arg grid_map_topic)"/>
	        <param name="area_rate" value="1.0"/>
            <param name="end_time" value="1200"/>
            <param name="exmng/exmng_parameter_file_path" value="$(find exploration_support)/param/exmng_last_parameters.yaml"/>
            <rosparam file="$(find exploration_support)/param/exmng_last_parameters.yaml" command="load" ns="exmng"/>
        </node>

        <!-- robot_manager --> <!-- ローカルlogとかについてちゃんと -->
        <node pkg="exploration_support" type="robot_manager" name="robot_manager">
            <param name="pose_log_rate" value="1.0"/>
        </node>

        <!-- frontier_detection -->
        <node pkg="exploration_support" type="frontier_detection" name="frontier_detection">
            <!-- <remap if="$(arg map_fill)" from="map" to="$(arg fill_map)"/>
            <remap unless="$(arg map_fill)" from="map" to="$(arg grid_map_topic)"/> -->
            <remap if="$(eval arg('map_fill') and arg('use_costmap'))" from="map" to="$(arg fill_costmap)"/>
            <remap if="$(eval arg('map_fill') and not arg('use_costmap'))" from="map" to="$(arg fill_map)"/>
            <remap if="$(eval not arg('map_fill') and not arg('use_costmap'))" from="map" to="$(arg grid_map_topic)"/>
            <remap if="$(eval not arg('map_fill') and arg('use_costmap'))" from="map" to="$(arg orig_costmap)"/>
            <param name="frontier/frontier_parameter_file_path" value="$(find exploration_support)/param/frontier_last_parameters.yaml"/>
            <rosparam file="$(find exploration_support)/param/frontie_last_parameters.yaml" command="load" ns="frontier"/>
        </node>
    </group>
</launch>